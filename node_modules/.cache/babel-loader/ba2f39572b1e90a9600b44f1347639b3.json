{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactApp\\\\FoodOrder\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [sides, setSides] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    // fetchig data from database\n    const fetchMeals = async () => {\n      // getting response from database\n      const response = await fetch('https://himeals-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = []; //  looping through the data and storing it in loadedMeals array\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }); // FETCHING DRINKS\n\n    const fetchDrinks = async () => {\n      // getting response from database\n      const response = await fetch('https://himeals-default-rtdb.firebaseio.com/drinks.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedDrinks = []; //  looping through the data and storing it in loadedDrinks array\n\n      for (const key in responseData) {\n        loadedDrinks.push({\n          id: key,\n          name: responseData[key].name,\n          // description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setDrinks(loadedDrinks);\n      setIsLoading(false);\n    };\n\n    fetchDrinks().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }); // SIDES\n\n    const fetchSides = async () => {\n      // getting response from database\n      const response = await fetch('https://himeals-default-rtdb.firebaseio.com/sides.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedDrinks = []; //  looping through the data and storing it in loadedDrinks array\n\n      for (const key in responseData) {\n        loadedDrinks.push({\n          id: key,\n          name: responseData[key].name,\n          // description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setSides(loadedDrinks);\n      setIsLoading(false);\n    };\n\n    fetchSides().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }); // DESSERTS\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this));\n  const drinksList = drinks.map(drink => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: drink.id,\n    name: drink.name // description={drink.description}\n    ,\n    price: drink.price\n  }, drink.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this));\n  const sidesList = sides.map(side => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: side.id,\n    name: side.name // description={drink.description}\n    ,\n    price: side.price\n  }, side.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      id: \"hungry\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Drinks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      id: \"drinks\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: drinksList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      id: \"sides\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sidesList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"cjGLZ1ZPlCog+sVFmYD0GxuwdBA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setMeals","drinks","setDrinks","sides","setSides","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","fetchDrinks","loadedDrinks","fetchSides","MealsLoading","MealsError","mealsList","map","meal","drinksList","drink","sidesList","side"],"sources":["C:/reactApp/FoodOrder/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [sides, setSides] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  useEffect(() => {\n    // fetchig data from database\n    const fetchMeals = async () => {\n      // getting response from database\n      const response = await fetch(\n        'https://himeals-default-rtdb.firebaseio.com/meals.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n      //  looping through the data and storing it in loadedMeals array\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n\n    // FETCHING DRINKS\n    const fetchDrinks = async () => {\n      // getting response from database\n      const response = await fetch(\n        'https://himeals-default-rtdb.firebaseio.com/drinks.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      const loadedDrinks = [];\n      //  looping through the data and storing it in loadedDrinks array\n      for (const key in responseData) {\n        loadedDrinks.push({\n          id: key,\n          name: responseData[key].name,\n          // description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setDrinks(loadedDrinks);\n      setIsLoading(false);\n    }\n    fetchDrinks().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n\n    // SIDES\n    const fetchSides = async () => {\n      // getting response from database\n      const response = await fetch(\n        'https://himeals-default-rtdb.firebaseio.com/sides.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      const loadedDrinks = [];\n      //  looping through the data and storing it in loadedDrinks array\n      for (const key in responseData) {\n        loadedDrinks.push({\n          id: key,\n          name: responseData[key].name,\n          // description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setSides(loadedDrinks);\n      setIsLoading(false);\n    }\n    fetchSides().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n\n    // DESSERTS\n\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section className={classes.MealsLoading}>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n\n  if (httpError) {\n    return (\n      <section className={classes.MealsError}>\n        <p>{httpError}</p>\n      </section>\n    );\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  const drinksList = drinks.map((drink) => (\n    <MealItem\n      key={drink.id}\n      id={drink.id}\n      name={drink.name}\n      // description={drink.description}\n      price={drink.price}\n    />\n  ));\n\n  const sidesList = sides.map((side) => (\n    <MealItem\n      key={side.id}\n      id={side.id}\n      name={side.name}\n      // description={drink.description}\n      price={side.price}\n    />\n  ));\n\n\n  return (\n    <section className={classes.meals}>\n      <Card id={\"hungry\"}>\n        <ul>{mealsList}</ul>\n      </Card>\n      <h2>Drinks</h2>\n      <Card id={\"drinks\"}>\n        <ul>{drinksList}</ul>\n      </Card>\n      <Card id={\"sides\"}>\n        <ul>{sidesList}</ul>\n      </Card>\n\n\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}