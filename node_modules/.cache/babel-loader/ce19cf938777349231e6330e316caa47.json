{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactApp\\\\FoodOrder\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { AuthProvider, useAuth } from '../../store/auth-context';\nimport classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFourChars = value => value.trim().length === 4;\n\nconst Checkout = props => {\n  _s();\n\n  const {\n    currentUser\n  } = useAuth();\n  const [showSignInpage, setShowSignInPage] = useState(false);\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFourChars(enteredPostalCode);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid; // checking if form is valid\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n\n  const closeHandler = () => {\n    setShowSignInPage(false);\n  };\n\n  if (openLogin) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex align-items-center justify-content-center\",\n      style: {\n        minHeight: \"100vh\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100\",\n        style: {\n          maxWidth: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Login, {\n          onClose: closeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: // check if user is logged in or not by auth context\n    currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.controls,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameControlClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter a valid name!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: streetControlClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"street\",\n          children: \"Street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"street\",\n          ref: streetInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter a valid street!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: postalCodeControlClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"postal\",\n          children: \"Postal Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"postal\",\n          ref: postalCodeInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter a valid postal code (4 characters long)!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cityControlClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"city\",\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"city\",\n          ref: cityInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please enter a valid city!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Please \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 20\n      }, this), \" to confirm your order\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"cEdUr5v6mz7OxSPKM3z2kZYQNkA=\", false, function () {\n  return [useAuth];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["useRef","useState","AuthProvider","useAuth","classes","isEmpty","value","trim","isFourChars","length","Checkout","props","currentUser","showSignInpage","setShowSignInPage","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","closeHandler","openLogin","minHeight","maxWidth","form","controls"],"sources":["C:/reactApp/FoodOrder/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react';\nimport { AuthProvider, useAuth } from '../../store/auth-context';\nimport classes from './Checkout.module.css';\n\nconst isEmpty = (value) => value.trim() === '';\nconst isFourChars = (value) => value.trim().length === 4;\n\nconst Checkout = (props) => {\n  const { currentUser } = useAuth();\n  const [showSignInpage, setShowSignInPage] = useState(false);\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalCodeIsValid = isFourChars(enteredPostalCode);\n\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalCodeIsValid,\n    });\n\n    const formIsValid =\n    enteredNameIsValid &&\n    enteredStreetIsValid &&\n    enteredCityIsValid &&\n    enteredPostalCodeIsValid;\n    \n    // checking if form is valid\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostalCode,\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${\n    formInputsValidity.name ? '' : classes.invalid\n  }`;\n  const streetControlClasses = `${classes.control} ${\n    formInputsValidity.street ? '' : classes.invalid\n  }`;\n  const postalCodeControlClasses = `${classes.control} ${\n    formInputsValidity.postalCode ? '' : classes.invalid\n  }`;\n  const cityControlClasses = `${classes.control} ${\n    formInputsValidity.city ? '' : classes.invalid\n  }`;\n\n  const closeHandler = () => {\n    setShowSignInPage(false);\n  }\n\n\n\n   if (openLogin) {\n        return(\n        <Container className=\"d-flex align-items-center justify-content-center\"\n        style={{ minHeight: \"100vh\" }}>\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n          <Login onClose={closeHandler} />\n        </div>\n\n      </Container>\n        )\n    }\n    \n\n  return (\n    \n    <form className={classes.form} onSubmit={confirmHandler}>\n      {\n        // check if user is logged in or not by auth context\n        currentUser ? (\n          <div className={classes.controls}>\n            <div className={nameControlClasses}>\n              <label htmlFor='name'>Your Name</label>\n              <input type='text' id='name' ref={nameInputRef} />\n              {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n            </div>\n            <div className={streetControlClasses}>\n              <label htmlFor='street'>Street</label>\n              <input type='text' id='street' ref={streetInputRef} />\n              {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n            </div>\n            <div className={postalCodeControlClasses}>\n              <label htmlFor='postal'>Postal Code</label>\n              <input type='text' id='postal' ref={postalCodeInputRef} />\n              {!formInputsValidity.postalCode && (\n                <p>Please enter a valid postal code (4 characters long)!</p>\n              )}\n            </div>\n            <div className={cityControlClasses}>\n              <label htmlFor='city'>City</label>\n              <input type='text' id='city' ref={cityInputRef} />\n              {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n            </div>\n          </div>\n        ) : (\n          <p>\n            Please <button onClick={openLogin}>Login</button> to confirm your\n            order\n\n          </p>\n        )\n        \n      }\n      {/* <div className={nameControlClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' ref={nameInputRef} />\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street' ref={streetInputRef} />\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n      </div>\n      <div className={postalCodeControlClasses}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalCodeInputRef} />\n        {!formInputsValidity.postalCode && (\n          <p>Please enter a valid postal code (4 characters long)!</p>\n        )}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef} />\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div> */}\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,0BAAtC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAAN,OAAiB,EAA5C;;AACA,MAAMC,WAAW,GAAIF,KAAD,IAAWA,KAAK,CAACC,IAAN,GAAaE,MAAb,KAAwB,CAAvD;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM;IAAEC;EAAF,IAAkBT,OAAO,EAA/B;EACA,MAAM,CAACU,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD;EACA,MAAM,CAACc,kBAAD,EAAqBC,qBAArB,IAA8Cf,QAAQ,CAAC;IAC3DgB,IAAI,EAAE,IADqD;IAE3DC,MAAM,EAAE,IAFmD;IAG3DC,IAAI,EAAE,IAHqD;IAI3DC,UAAU,EAAE;EAJ+C,CAAD,CAA5D;EAOA,MAAMC,YAAY,GAAGrB,MAAM,EAA3B;EACA,MAAMsB,cAAc,GAAGtB,MAAM,EAA7B;EACA,MAAMuB,kBAAkB,GAAGvB,MAAM,EAAjC;EACA,MAAMwB,YAAY,GAAGxB,MAAM,EAA3B;;EAEA,MAAMyB,cAAc,GAAIC,KAAD,IAAW;IAChCA,KAAK,CAACC,cAAN;IAEA,MAAMC,WAAW,GAAGP,YAAY,CAACQ,OAAb,CAAqBvB,KAAzC;IACA,MAAMwB,aAAa,GAAGR,cAAc,CAACO,OAAf,CAAuBvB,KAA7C;IACA,MAAMyB,iBAAiB,GAAGR,kBAAkB,CAACM,OAAnB,CAA2BvB,KAArD;IACA,MAAM0B,WAAW,GAAGR,YAAY,CAACK,OAAb,CAAqBvB,KAAzC;IAEA,MAAM2B,kBAAkB,GAAG,CAAC5B,OAAO,CAACuB,WAAD,CAAnC;IACA,MAAMM,oBAAoB,GAAG,CAAC7B,OAAO,CAACyB,aAAD,CAArC;IACA,MAAMK,kBAAkB,GAAG,CAAC9B,OAAO,CAAC2B,WAAD,CAAnC;IACA,MAAMI,wBAAwB,GAAG5B,WAAW,CAACuB,iBAAD,CAA5C;IAEAf,qBAAqB,CAAC;MACpBC,IAAI,EAAEgB,kBADc;MAEpBf,MAAM,EAAEgB,oBAFY;MAGpBf,IAAI,EAAEgB,kBAHc;MAIpBf,UAAU,EAAEgB;IAJQ,CAAD,CAArB;IAOA,MAAMC,WAAW,GACjBJ,kBAAkB,IAClBC,oBADA,IAEAC,kBAFA,IAGAC,wBAJA,CApBgC,CA0BhC;;IACA,IAAI,CAACC,WAAL,EAAkB;MAChB;IACD;;IAED1B,KAAK,CAAC2B,SAAN,CAAgB;MACdrB,IAAI,EAAEW,WADQ;MAEdV,MAAM,EAAEY,aAFM;MAGdX,IAAI,EAAEa,WAHQ;MAIdZ,UAAU,EAAEW;IAJE,CAAhB;EAMD,CArCD;;EAuCA,MAAMQ,kBAAkB,GAAI,GAAEnC,OAAO,CAACoC,OAAQ,IAC5CzB,kBAAkB,CAACE,IAAnB,GAA0B,EAA1B,GAA+Bb,OAAO,CAACqC,OACxC,EAFD;EAGA,MAAMC,oBAAoB,GAAI,GAAEtC,OAAO,CAACoC,OAAQ,IAC9CzB,kBAAkB,CAACG,MAAnB,GAA4B,EAA5B,GAAiCd,OAAO,CAACqC,OAC1C,EAFD;EAGA,MAAME,wBAAwB,GAAI,GAAEvC,OAAO,CAACoC,OAAQ,IAClDzB,kBAAkB,CAACK,UAAnB,GAAgC,EAAhC,GAAqChB,OAAO,CAACqC,OAC9C,EAFD;EAGA,MAAMG,kBAAkB,GAAI,GAAExC,OAAO,CAACoC,OAAQ,IAC5CzB,kBAAkB,CAACI,IAAnB,GAA0B,EAA1B,GAA+Bf,OAAO,CAACqC,OACxC,EAFD;;EAIA,MAAMI,YAAY,GAAG,MAAM;IACzB/B,iBAAiB,CAAC,KAAD,CAAjB;EACD,CAFD;;EAMC,IAAIgC,SAAJ,EAAe;IACV,oBACA,QAAC,SAAD;MAAW,SAAS,EAAC,kDAArB;MACA,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAb,CADP;MAAA,uBAEA;QAAK,SAAS,EAAC,OAAf;QAAuB,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAZ,CAA9B;QAAA,uBACE,QAAC,KAAD;UAAO,OAAO,EAAEH;QAAhB;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IAFA;MAAA;MAAA;MAAA;IAAA,QADA;EASH;;EAGH,oBAEE;IAAM,SAAS,EAAEzC,OAAO,CAAC6C,IAAzB;IAA+B,QAAQ,EAAExB,cAAzC;IAAA,UAEI;IACAb,WAAW,gBACT;MAAK,SAAS,EAAER,OAAO,CAAC8C,QAAxB;MAAA,wBACE;QAAK,SAAS,EAAEX,kBAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,EAAE,EAAC,MAAtB;UAA6B,GAAG,EAAElB;QAAlC;UAAA;UAAA;UAAA;QAAA,QAFF,EAGG,CAACN,kBAAkB,CAACE,IAApB,iBAA4B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAH/B;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAK,SAAS,EAAEyB,oBAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,QAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,EAAE,EAAC,QAAtB;UAA+B,GAAG,EAAEpB;QAApC;UAAA;UAAA;UAAA;QAAA,QAFF,EAGG,CAACP,kBAAkB,CAACG,MAApB,iBAA8B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHjC;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAWE;QAAK,SAAS,EAAEyB,wBAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,QAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,EAAE,EAAC,QAAtB;UAA+B,GAAG,EAAEpB;QAApC;UAAA;UAAA;UAAA;QAAA,QAFF,EAGG,CAACR,kBAAkB,CAACK,UAApB,iBACC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF,eAkBE;QAAK,SAAS,EAAEwB,kBAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,EAAE,EAAC,MAAtB;UAA6B,GAAG,EAAEpB;QAAlC;UAAA;UAAA;UAAA;QAAA,QAFF,EAGG,CAACT,kBAAkB,CAACI,IAApB,iBAA4B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAH/B;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADS,gBA0BT;MAAA,mCACS;QAAQ,OAAO,EAAE2B,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADT;IAAA;MAAA;MAAA;MAAA;IAAA;EA7BN;IAAA;IAAA;IAAA;EAAA,QAFF;AAqED,CA3JD;;GAAMpC,Q;UACoBP,O;;;KADpBO,Q;AA6JN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}