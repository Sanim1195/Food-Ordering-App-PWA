{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactApp\\\\FoodOrder\\\\src\\\\components\\\\Layout\\\\Resturant.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport classes from './Resturant.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Resturant = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(); // get orders from firebase and display them\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      // getting response from database\n      const response = await fetch('https://himeals-default-rtdb.firebaseio.com/orders.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = []; //  looping through the data and storing it in loadedMeals array\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          isCompleted: responseData[key].isCompleted,\n          order: responseData[key].orderedItems,\n          name: responseData[key].user,\n          price: responseData[key].price\n        });\n      } // console.log(loadedMeals);\n\n\n      setOrders(loadedMeals); // console log orders\n\n      setIsLoading(false); // console.log(orders);\n    };\n\n    fetchOrders().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []); // Message to display when loading\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } // Message to display when error\n\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n  console.log(orders); // filter the orders that are not completed and store them in a new array\n\n  const filteredOrders = orders.filter(order => {\n    return order.isCompleted === false;\n  });\n  console.log(\"filtered orders\");\n  console.log(filteredOrders);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: classes.navbar,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.header,\n        children: \"Orders:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: orders.map(order => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.cardItems,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [order.name.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), // filter orders that are not completed\n              // order.order.filter((item) => {\n              //   return item.isCompleted === false;\n              // }).map((item) => {\n              //   return (\n              //     <div key={item.id}>\n              //       <h1>{item.name} x {item.amount}</h1>\n              //     </div>\n              //   );\n              // })\n              order.order.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: [item.name, \" x \", item.amount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 27\n                  }, this)\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 25\n                }, this);\n              }), \";\"]\n            }, order.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: classes.flagButton,\n                children: \"Done!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Resturant, \"5pHtWI5Q316qRtaOYDxHcKj7Fzc=\");\n\n_c = Resturant;\nexport default Resturant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resturant\");","map":{"version":3,"names":["useState","useEffect","classes","Resturant","orders","setOrders","isLoading","setIsLoading","httpError","setHttpError","fetchOrders","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","isCompleted","order","orderedItems","name","user","price","catch","error","message","console","log","filteredOrders","filter","navbar","header","map","card","cardItems","item","amount","flagButton"],"sources":["C:/reactApp/FoodOrder/src/components/Layout/Resturant.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport classes from './Resturant.module.css';\r\n\r\nconst Resturant = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  // get orders from firebase and display them\r\n  useEffect(() => {\r\n\r\n    const fetchOrders = async () => {\r\n      // getting response from database\r\n      const response = await fetch(\r\n        'https://himeals-default-rtdb.firebaseio.com/orders.json'\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error('Something went wrong!');\r\n      }\r\n\r\n      const responseData = await response.json();\r\n\r\n      const loadedMeals = [];\r\n      //  looping through the data and storing it in loadedMeals array\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          isCompleted: responseData[key].isCompleted,\r\n          order: responseData[key].orderedItems,\r\n          name: responseData[key].user,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n      // console.log(loadedMeals);\r\n      setOrders(loadedMeals);\r\n      // console log orders\r\n      setIsLoading(false);\r\n      // console.log(orders);\r\n\r\n    };\r\n    fetchOrders().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n  }, []);\r\n  // Message to display when loading\r\n  if (isLoading) {\r\n    return (\r\n      <section >\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // Message to display when error\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n  console.log(orders);\r\n  // filter the orders that are not completed and store them in a new array\r\n  const filteredOrders = orders.filter((order) => {\r\n    return order.isCompleted === false;\r\n  });\r\n  console.log(\"filtered orders\");\r\n  console.log(filteredOrders);\r\n\r\n  return (<>\r\n    <nav className={classes.navbar}>\r\n      <span className={classes.header}>\r\n        Orders:\r\n      </span>\r\n    </nav>\r\n    <div >\r\n      {\r\n        orders.map((order) => {\r\n          return (\r\n            <>\r\n              <div className={classes.card}>\r\n                <div className={classes.cardItems} key={order.id}>\r\n                  <h1>{order.name.name} </h1>\r\n                  {/* map array of orders here */}\r\n                  {\r\n                    // filter orders that are not completed\r\n                    // order.order.filter((item) => {\r\n                    //   return item.isCompleted === false;\r\n                    // }).map((item) => {\r\n                    //   return (\r\n                    //     <div key={item.id}>\r\n                    //       <h1>{item.name} x {item.amount}</h1>\r\n                    //     </div>\r\n                    //   );\r\n                    // })\r\n                  \r\n                  \r\n                  \r\n                  \r\n                  \r\n                   \r\n                    order.order.map((item) => {\r\n                      return (\r\n                        <div key={item.id}>\r\n                          <h1>{item.name} x {item.amount}</h1>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  }; \r\n                </div>\r\n                <div>\r\n                  <button className={classes.flagButton} >\r\n                    Done!\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n        })\r\n      }\r\n\r\n\r\n\r\n    </div>\r\n  </>\r\n\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default Resturant;"],"mappings":"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"},"metadata":{},"sourceType":"module"}