{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactApp\\\\FoodOrder\\\\src\\\\components\\\\Layout\\\\SignUp.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"../UI/Modal\";\nimport { useState, useRef } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from '../../store/auth-context';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = props => {\n  _s();\n\n  const [openLogin, setOpenLogin] = useState(false);\n  const [error, setError] = useState(\"\");\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const signUp = useAuth();\n\n  const clickLoginhandler = () => {\n    setOpenLogin(true);\n  };\n\n  function handleSubit(e) {\n    //   prevent the page from reloading\n    e.preventDefault();\n    signUp(emailRef.current.value, passwordRef.current.value);\n  }\n\n  ; // if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n  //     return setError(\"Passwords do not match\")\n  //   }\n\n  if (openLogin) {\n    return /*#__PURE__*/_jsxDEV(SignUp, {\n      onClose: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            ref: emailRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            ref: passwordRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          id: \"password-confirm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password Confirmation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            ref: passwordConfirmRef,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"w-100\",\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"zbA0STCqqDe3mihDRcZMwzlQM6I=\", false, function () {\n  return [useAuth];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["Modal","useState","useRef","Form","Button","Card","Alert","useAuth","Link","useHistory","SignUp","props","openLogin","setOpenLogin","error","setError","emailRef","passwordRef","passwordConfirmRef","signUp","clickLoginhandler","handleSubit","e","preventDefault","current","value","onClose"],"sources":["C:/reactApp/FoodOrder/src/components/Layout/SignUp.js"],"sourcesContent":["import Modal from \"../UI/Modal\";\r\nimport { useState, useRef } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from '../../store/auth-context';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\n\r\nconst SignUp = (props) => {\r\n    const [openLogin, setOpenLogin] = useState(false);\r\n    const [error, setError] = useState(\"\")\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const signUp = useAuth();\r\n    const clickLoginhandler = () => {\r\n        setOpenLogin(true);\r\n    };\r\n\r\n    function handleSubit (e) {\r\n    //   prevent the page from reloading\r\n        e.preventDefault();\r\n        signUp(emailRef.current.value, passwordRef.current.value);\r\n    };\r\n\r\n    // if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n    //     return setError(\"Passwords do not match\")\r\n    //   }\r\n\r\n    if (openLogin) {\r\n        return <SignUp onClose={props.onClose} />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n                    {/* {error && <Alert variant=\"danger\">{error}</Alert>} */}\r\n\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Password Confirmation</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                    </Form.Group>\r\n                    <Button className=\"w-100\" type=\"submit\">\r\n                        Sign Up\r\n                    </Button>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Already have an account?\r\n            </div>\r\n           \r\n        </Modal>\r\n    )\r\n};\r\n\r\nexport default SignUp;"],"mappings":"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"},"metadata":{},"sourceType":"module"}