{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactApp\\\\FoodOrder\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    // fetchig data from database\n    const fetchMeals = async () => {\n      // getting response from database\n      const response = await fetch('https://himeals-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = []; //  looping through the data and storing it in loadedMeals array\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n\n    const fetchDrinks = async () => {\n      // getting response from database\n      const response = await fetch('https://himeals-default-rtdb.firebaseio.com/drinks.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedDrinks = []; //  looping through the data and storing it in loadedDrinks array\n\n      for (const key in responseData) {\n        loadedDrinks.push({\n          id: key,\n          name: responseData[key].name,\n          // description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setDrinks(loadedDrinks);\n      setIsLoading(false);\n    };\n\n    fetchDrinks().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this));\n  const drinksList = drinks.map(drink => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: drink.id,\n    name: drink.name // description={drink.description}\n    ,\n    price: drink.price\n  }, drink.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      id: \"hungry\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), \"// Display drinks sides and dessrerts here.\", /*#__PURE__*/_jsxDEV(Card, {\n      id: \"drinks\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: drinksList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"qjVx4Q4LHASrlsIfCtkJ4jXgM/A=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setMeals","drinks","setDrinks","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","fetchDrinks","loadedDrinks","MealsLoading","MealsError","mealsList","map","meal","drinksList","drink"],"sources":["C:/reactApp/FoodOrder/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  useEffect(() => {\n    // fetchig data from database\n    const fetchMeals = async () => {\n      // getting response from database\n      const response = await fetch(\n        'https://himeals-default-rtdb.firebaseio.com/meals.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n//  looping through the data and storing it in loadedMeals array\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n\n    const fetchDrinks = async () => {\n      // getting response from database\n      const response = await fetch(\n        'https://himeals-default-rtdb.firebaseio.com/drinks.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      const loadedDrinks = [];\n//  looping through the data and storing it in loadedDrinks array\n      for (const key in responseData) {\n        loadedDrinks.push({\n          id: key,\n          name: responseData[key].name,\n          // description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setDrinks(loadedDrinks);\n      setIsLoading(false);\n    }\n    fetchDrinks().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n\n  }, []);\n\n  if (isLoading) {\n    return (\n      <section className={classes.MealsLoading}>\n        <p>Loading...</p>\n      </section>\n    );\n  }\n\n  if (httpError) {\n    return (\n      <section className={classes.MealsError}>\n        <p>{httpError}</p>\n      </section>\n    );\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  const drinksList = drinks.map((drink) => (\n    <MealItem\n      key={drink.id}\n      id={drink.id}\n      name={drink.name}\n      // description={drink.description}\n      price={drink.price}\n    />\n  ));\n\n\n  return (\n    <section className={classes.meals}>\n      <Card id={\"hungry\"}>\n        <ul>{mealsList}</ul>\n      </Card>\n    // Display drinks sides and dessrerts here.\n    <Card id={\"drinks\"}>\n      <ul>{drinksList}</ul>\n    </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}