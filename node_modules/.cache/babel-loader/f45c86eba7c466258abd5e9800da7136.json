{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactApp\\\\FoodOrder\\\\src\\\\components\\\\Layout\\\\Resturant.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Resturant = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(); // get orders from firebase and display them\n\n  useEffect(() => {\n    // fetchig data from database\n    // fetchig data from database\n    const fetchOrders = async () => {\n      // getting response from database\n      const response = await fetch('https://himeals-default-rtdb.firebaseio.com/orders.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = []; //  looping through the data and storing it in loadedMeals array\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          order: responseData[key].orderedItems,\n          name: responseData[key].user,\n          // description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setOrders(loadedMeals);\n      setIsLoading(false); // console.log(orders[0].name);\n      // display orders\n      //  console.log(loadedMeals[0].name.name);\n      //  Loop through the orders and display individual array\n      //  console.log(loadedMeals[0].order[0].name);\n      // for (let i = 0; i < loadedMeals.length; i++) {\n      //   console.log(loadedMeals[i].order);\n      // }\n    };\n\n    fetchOrders().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  } // *****************************************************************************\n\n\n  orders.map = order => {\n    console.log();\n  }; // mapping through the orders array and displaying the orders\n\n\n  const objectList = () => {\n    Object.values(orders).map((order, index) => {\n      return (\n        /*#__PURE__*/\n        // console.log(order.order);\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: console.log(order)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [order.order[0].name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      );\n    }); // console.log(orders);\n\n    const orderList = () => {\n      for (let i = 0; i < orders.length; i++) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \"console.log(orders[i])\"\n        }, void 0, false); // console.log(loadedMeals[i].order);\n      }\n    }; // ****************************************************************\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), objectList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  };\n};\n\n_s(Resturant, \"5pHtWI5Q316qRtaOYDxHcKj7Fzc=\");\n\n_c = Resturant;\nexport default Resturant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resturant\");","map":{"version":3,"names":["useEffect","useState","Resturant","orders","setOrders","isLoading","setIsLoading","httpError","setHttpError","fetchOrders","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","order","orderedItems","name","user","price","catch","error","message","map","console","log","objectList","Object","values","index","orderList","i","length"],"sources":["C:/reactApp/FoodOrder/src/components/Layout/Resturant.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Resturant = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n\r\n  // get orders from firebase and display them\r\n  useEffect(() => {\r\n    // fetchig data from database\r\n    // fetchig data from database\r\n    const fetchOrders = async () => {\r\n      // getting response from database\r\n      const response = await fetch(\r\n        'https://himeals-default-rtdb.firebaseio.com/orders.json'\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Something went wrong!');\r\n      }\r\n\r\n      const responseData = await response.json();\r\n\r\n      const loadedMeals = [];\r\n      //  looping through the data and storing it in loadedMeals array\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          order: responseData[key].orderedItems,\r\n          name: responseData[key].user,\r\n          // description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n\r\n      setOrders(loadedMeals);\r\n      setIsLoading(false);\r\n      // console.log(orders[0].name);\r\n      // display orders\r\n\r\n      //  console.log(loadedMeals[0].name.name);\r\n      //  Loop through the orders and display individual array\r\n\r\n      //  console.log(loadedMeals[0].order[0].name);\r\n      // for (let i = 0; i < loadedMeals.length; i++) {\r\n      //   console.log(loadedMeals[i].order);\r\n      // }\r\n    };\r\n\r\n    fetchOrders().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n  },\r\n\r\n    [])\r\n  if (isLoading) {\r\n    return (\r\n      <section >\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n  // *****************************************************************************\r\n\r\n\r\n  orders.map = (order) => {\r\n    console.log()\r\n  }\r\n  // mapping through the orders array and displaying the orders\r\n\r\n  const objectList = () => {\r\n    Object.values(orders).map((order, index) => {\r\n      return (\r\n        // console.log(order.order);\r\n        <div key={index}>\r\n          <h1>{console.log(order)}</h1>\r\n          <h1>{order.order[0].name } </h1>\r\n        </div>\r\n      )\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    // console.log(orders);\r\n\r\n    const orderList = () => {\r\n      for (let i = 0; i < orders.length; i++) {\r\n        return (\r\n          <>\r\n            {/* <h3>{orders[i].order}</h3> */}\r\n            console.log(orders[i])\r\n          </>\r\n        )\r\n        // console.log(loadedMeals[i].order);\r\n      }\r\n\r\n    }\r\n\r\n    // ****************************************************************\r\n\r\n    return (\r\n      <div>\r\n        <h1>Orders</h1>\r\n        {/* <ul> */}\r\n        {/* Loop through the orders array and get individual attributes */}\r\n        {/* use for loop to loop through the array */}\r\n        {objectList}\r\n\r\n\r\n        {/* {console.log(orders)} */}\r\n        {/* {orders.map((order, key) => (\r\n                    <li key={key++}>\r\n                        <h2>{order.id}</h2>\r\n                        <p>{order.description}</p>\r\n                        <p>{order.price}</p>\r\n                    </li>\r\n                ))} */}\r\n        {/* </ul> */}\r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\n  export default Resturant;"],"mappings":"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"},"metadata":{},"sourceType":"module"}