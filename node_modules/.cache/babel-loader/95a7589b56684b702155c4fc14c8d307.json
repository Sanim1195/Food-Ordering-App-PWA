{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactApp\\\\FoodOrder\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true); // Sign up a new user\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password);\n  } //   Log in an existing user\n\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password);\n  } // Log out a user\n\n\n  function logout() {\n    return auth.signOut();\n  } // \n\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email);\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email);\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password);\n  } // \n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []); //   the value should be an object with all the values you want to pass to the context\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","auth","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","unsubscribe","onAuthStateChanged","user","value"],"sources":["C:/reactApp/FoodOrder/src/store/auth-context.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\r\nimport { auth } from \"../firebase\"\r\n\r\n const AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n  const [currentUser, setCurrentUser] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n// Sign up a new user\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n//   Log in an existing user\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n// Log out a user\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n// \r\n  function resetPassword(email) {\r\n    return auth.sendPasswordResetEmail(email)\r\n  }\r\n\r\n  function updateEmail(email) {\r\n    return currentUser.updateEmail(email)\r\n  }\r\n\r\n  function updatePassword(password) {\r\n    return currentUser.updatePassword(password)\r\n  }\r\n// \r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n//   the value should be an object with all the values you want to pass to the context\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    resetPassword,\r\n    updateEmail,\r\n    updatePassword\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n      {/* {!loading && children} */}\r\n    </AuthContext.Provider>\r\n  )\r\n}"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,aAArB;;AAEC,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAN,EAApB;AAED,OAAO,SAASC,OAAT,GAAmB;EAAA;;EACxB,OAAON,UAAU,CAACI,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,OAAoC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAEzC,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA9C;EACA,MAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC,CAHyC,CAI3C;;EACE,SAASY,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;IAC/B,OAAOZ,IAAI,CAACa,8BAAL,CAAoCF,KAApC,EAA2CC,QAA3C,CAAP;EACD,CAPwC,CAS3C;;;EACE,SAASE,KAAT,CAAeH,KAAf,EAAsBC,QAAtB,EAAgC;IAC9B,OAAOZ,IAAI,CAACe,0BAAL,CAAgCJ,KAAhC,EAAuCC,QAAvC,CAAP;EACD,CAZwC,CAa3C;;;EACE,SAASI,MAAT,GAAkB;IAChB,OAAOhB,IAAI,CAACiB,OAAL,EAAP;EACD,CAhBwC,CAiB3C;;;EACE,SAASC,aAAT,CAAuBP,KAAvB,EAA8B;IAC5B,OAAOX,IAAI,CAACmB,sBAAL,CAA4BR,KAA5B,CAAP;EACD;;EAED,SAASS,WAAT,CAAqBT,KAArB,EAA4B;IAC1B,OAAOL,WAAW,CAACc,WAAZ,CAAwBT,KAAxB,CAAP;EACD;;EAED,SAASU,cAAT,CAAwBT,QAAxB,EAAkC;IAChC,OAAON,WAAW,CAACe,cAAZ,CAA2BT,QAA3B,CAAP;EACD,CA5BwC,CA6B3C;;;EACEb,SAAS,CAAC,MAAM;IACd,MAAMuB,WAAW,GAAGtB,IAAI,CAACuB,kBAAL,CAAwBC,IAAI,IAAI;MAClDjB,cAAc,CAACiB,IAAD,CAAd;MACAf,UAAU,CAAC,KAAD,CAAV;IACD,CAHmB,CAApB;IAKA,OAAOa,WAAP;EACD,CAPQ,EAON,EAPM,CAAT,CA9ByC,CAuC3C;;EACE,MAAMG,KAAK,GAAG;IACZnB,WADY;IAEZQ,KAFY;IAGZJ,MAHY;IAIZM,MAJY;IAKZE,aALY;IAMZE,WANY;IAOZC;EAPY,CAAd;EAUA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEI,KAA7B;IAAA,UACGpB;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;IAxDeD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}