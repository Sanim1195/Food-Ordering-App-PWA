{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactApp\\\\FoodOrder\\\\src\\\\components\\\\Layout\\\\Resturant.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport classes from './Resturant.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Resturant = () => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(); // get orders from firebase and display them\n\n  useEffect(() => {\n    // fetchig data from database\n    // fetchig data from database\n    const fetchOrders = async () => {\n      // getting response from database\n      const response = await fetch('https://himeals-default-rtdb.firebaseio.com/orders.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = []; //  looping through the data and storing it in loadedMeals array\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          isCompleted: responseData[key].isCompleted,\n          order: responseData[key].orderedItems,\n          name: responseData[key].user,\n          // description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setOrders(loadedMeals);\n      setIsLoading(false); // console.log(orders[0].name);\n      // display orders\n      //  console.log(loadedMeals[0].name.name);\n      //  Loop through the orders and display individual array\n      //  console.log(loadedMeals[0].order[0].name);\n      // for (let i = 0; i < loadedMeals.length; i++) {\n      //   console.log(loadedMeals[i].order);\n      // }\n    };\n\n    fetchOrders().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  } // delete order from firebase and remove it from the page\n\n\n  const orderComplete = async id => {\n    console.log(id);\n    console.log(\"Order COmplete status:  \" + id.isCompleted); // set the isOrderComplete to true\n    // !id.isCompleted ? id.isCompleted = true : id.isCompleted = false;\n\n    !id.isCompleted && (id.isCompleted = true);\n    const response = await fetch(`https://himeals-default-rtdb.firebaseio.com/orders/${id}.json`, {\n      method: 'PATCH',\n      body: {\n        isCompleted: true\n      },\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }); // delete the order from the list \n    // const newOrders = orders.filter((order) => order.id !== id);\n    // setOrders(newOrders);\n    // delete the order from the database\n    // const response = await fetch(\n    //   `https://himeals-default-rtdb.firebaseio.com/orders/${id}.json`,\n    //   {\n    //     method: 'DELETE',\n    //   }\n    // );\n  }; // *****************************************************************************\n  // orders.map = (order) => {\n  //   console.log()\n  // }\n  // mapping through the orders array and displaying the orders\n  // Object.values(orders).map((order, index) => {\n  //   console.log(order.order);\n  //   return (\n  //     <div key={index}>\n  //       <h1>{console.log(order)}</h1>\n  //       <h1>{order} </h1>\n  //     </div>\n  //   )\n  // });\n  // ****************************************************************\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: classes.navbar,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.header,\n        children: \"Orders:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: orders.map(order => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.card,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.cardItems,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: [order.name.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this), order.order.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: [item.name, \" x \", item.amount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 29\n                  }, this)\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 27\n                }, this);\n              }), \";\"]\n            }, order.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: classes.flagButton,\n                onClick: () => orderComplete(order),\n                children: \"hello\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Resturant, \"5pHtWI5Q316qRtaOYDxHcKj7Fzc=\");\n\n_c = Resturant;\nexport default Resturant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resturant\");","map":{"version":3,"names":["useEffect","useState","classes","Resturant","orders","setOrders","isLoading","setIsLoading","httpError","setHttpError","fetchOrders","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","isCompleted","order","orderedItems","name","user","price","catch","error","message","orderComplete","console","log","method","body","headers","navbar","header","map","card","cardItems","item","amount","flagButton"],"sources":["C:/reactApp/FoodOrder/src/components/Layout/Resturant.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport classes from './Resturant.module.css';\r\n\r\nconst Resturant = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n\r\n  // get orders from firebase and display them\r\n  useEffect(() => {\r\n    // fetchig data from database\r\n    // fetchig data from database\r\n    const fetchOrders = async () => {\r\n      // getting response from database\r\n      const response = await fetch(\r\n        'https://himeals-default-rtdb.firebaseio.com/orders.json'\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Something went wrong!');\r\n      }\r\n\r\n      const responseData = await response.json();\r\n\r\n      const loadedMeals = [];\r\n      //  looping through the data and storing it in loadedMeals array\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          isCompleted: responseData[key].isCompleted,\r\n          order: responseData[key].orderedItems,\r\n          name: responseData[key].user,\r\n          // description: responseData[key].description,\r\n          price: responseData[key].price,\r\n        });\r\n      }\r\n\r\n      setOrders(loadedMeals);\r\n      setIsLoading(false);\r\n      // console.log(orders[0].name);\r\n      // display orders\r\n\r\n      //  console.log(loadedMeals[0].name.name);\r\n      //  Loop through the orders and display individual array\r\n\r\n      //  console.log(loadedMeals[0].order[0].name);\r\n      // for (let i = 0; i < loadedMeals.length; i++) {\r\n      //   console.log(loadedMeals[i].order);\r\n      // }\r\n    };\r\n\r\n    fetchOrders().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n  },\r\n\r\n    [])\r\n  if (isLoading) {\r\n    return (\r\n      <section >\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  // delete order from firebase and remove it from the page\r\n  const orderComplete = async (id) => {\r\n\r\n    console.log(id);\r\n    console.log(\"Order COmplete status:  \" + id.isCompleted);\r\n    // set the isOrderComplete to true\r\n    // !id.isCompleted ? id.isCompleted = true : id.isCompleted = false;\r\n    !id.isCompleted && (id.isCompleted = true);\r\n    const response = await fetch(\r\n      `https://himeals-default-rtdb.firebaseio.com/orders/${id}.json`,\r\n      {\r\n        method: 'PATCH',\r\n        body: {\r\n          isCompleted: true,\r\n        }\r\n        ,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n    \r\n\r\n                      // delete the order from the list \r\n\r\n    // const newOrders = orders.filter((order) => order.id !== id);\r\n    // setOrders(newOrders);\r\n\r\n                        // delete the order from the database\r\n\r\n    // const response = await fetch(\r\n    //   `https://himeals-default-rtdb.firebaseio.com/orders/${id}.json`,\r\n    //   {\r\n    //     method: 'DELETE',\r\n    //   }\r\n    // );\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // *****************************************************************************\r\n\r\n\r\n  // orders.map = (order) => {\r\n  //   console.log()\r\n  // }\r\n  // mapping through the orders array and displaying the orders\r\n\r\n\r\n  // Object.values(orders).map((order, index) => {\r\n  //   console.log(order.order);\r\n  //   return (\r\n  //     <div key={index}>\r\n  //       <h1>{console.log(order)}</h1>\r\n  //       <h1>{order} </h1>\r\n  //     </div>\r\n  //   )\r\n  // });\r\n\r\n\r\n  // ****************************************************************\r\n\r\n  return (\r\n    <>\r\n      <nav className={classes.navbar}>\r\n        <span className={classes.header}>\r\n          Orders:\r\n        </span>\r\n      </nav>\r\n      <div >\r\n        {/* <h1>Orders</h1> */}\r\n        {/* <h3>{orders[0].name.name}</h3> */}\r\n        {\r\n          orders.map((order) => {\r\n            return (\r\n              <>\r\n                <div className={classes.card}>\r\n                  <div className={classes.cardItems} key={order.id}>\r\n                    {/* {console.log(order)} */}\r\n                    {/* <h3>{order.id} </h3> */}\r\n                    <h1>{order.name.name} </h1>\r\n                    {/* <h3> {order.name.city}</h3> */}\r\n                    {/* map array of orders here */}\r\n                    {\r\n                      order.order.map((item) => {\r\n                        return (\r\n                          <div key={item.id}>\r\n                            <h1>{item.name} x {item.amount}</h1>\r\n                          </div>\r\n                        );\r\n                      })\r\n                    };\r\n                  </div>\r\n                  <div>\r\n                    <button className={classes.flagButton} onClick={() => orderComplete(order)}>\r\n                      hello\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default Resturant;"],"mappings":"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"},"metadata":{},"sourceType":"module"}